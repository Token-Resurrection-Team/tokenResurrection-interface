{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        { "name": "_token", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "batchClaimTokens",
      "inputs": [
        {
          "name": "claimants",
          "type": "address[]",
          "internalType": "address[]"
        },
        { "name": "amounts", "type": "uint256[]", "internalType": "uint256[]" },
        {
          "name": "merkleProofs",
          "type": "bytes32[][]",
          "internalType": "bytes32[][]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "claimTokens",
      "inputs": [
        { "name": "claimant", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" },
        {
          "name": "merkleProof",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "fundAirdrop",
      "inputs": [
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "hasClaimed",
      "inputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "hasUserClaimed",
      "inputs": [
        { "name": "user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ipfsHash",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "merkleRoot",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "pause",
      "inputs": [
        { "name": "reason", "type": "string", "internalType": "string" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "paused",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "rescueERC20",
      "inputs": [
        { "name": "_token", "type": "address", "internalType": "address" },
        { "name": "_recipient", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "rescueERC721",
      "inputs": [
        { "name": "_token", "type": "address", "internalType": "address" },
        { "name": "_recipient", "type": "address", "internalType": "address" },
        { "name": "tokenId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "token",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract IERC20" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        { "name": "newOwner", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "unpause",
      "inputs": [
        { "name": "reason", "type": "string", "internalType": "string" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateMerkleRoot",
      "inputs": [
        { "name": "_merkleRoot", "type": "bytes32", "internalType": "bytes32" },
        { "name": "_ipfsHash", "type": "string", "internalType": "string" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "verifyClaim",
      "inputs": [
        { "name": "claimant", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" },
        {
          "name": "merkleProof",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "withdrawUnclaimed",
      "inputs": [
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "AirdropFunded",
      "inputs": [
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "BatchTokensClaimed",
      "inputs": [
        {
          "name": "claimer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "count",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ContractPaused",
      "inputs": [
        {
          "name": "paused",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        },
        {
          "name": "reason",
          "type": "string",
          "indexed": false,
          "internalType": "string"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Paused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TokensClaimed",
      "inputs": [
        {
          "name": "claimant",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Unpaused",
      "inputs": [
        {
          "name": "account",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "rootUpdated",
      "inputs": [
        {
          "name": "merkleRoot",
          "type": "bytes32",
          "indexed": true,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "EnforcedPause", "inputs": [] },
    { "type": "error", "name": "ExpectedPause", "inputs": [] },
    {
      "type": "error",
      "name": "OwnableInvalidOwner",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "OwnableUnauthorizedAccount",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" }
      ]
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "350:5802:48:-:0;;;926:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;962:10;;1269:95:24;;1322:31;;-1:-1:-1;;;1322:31:24;;1350:1;1322:31;;;455:51:51;428:18;;1322:31:24;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1241:5:35;1231:15;;-1:-1:-1;;;;1231:15:35;;;-1:-1:-1;984:22:48;;-1:-1:-1;;;;;;984:22:48::1;-1:-1:-1::0;;;;;984:22:48;;;::::1;::::0;;;::::1;::::0;;350:5802;;2912:187:24;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:24;;;-1:-1:-1;;;;;;3020:17:24;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:290:51:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:51;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:51:o;309:203::-;350:5802:48;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "350:5802:48:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;459:25;;;;;;;;;160::51;;;148:2;133:18;459:25:48;;;;;;;;2055:567;;;;;;:::i;:::-;;:::i;:::-;;1850:84:35;1897:4;1920:7;-1:-1:-1;;;1920:7:35;;;;1850:84;;;1864:14:51;;1857:22;1839:41;;1827:2;1812:18;1850:84:35;1699:187:51;4828:126:48;;;;;;:::i;:::-;;:::i;2293:101:24:-;;;:::i;549:42:48:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5941:209;;;;;;:::i;:::-;;:::i;1638:85:24:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:24;1638:85;;;-1:-1:-1;;;;;3572:32:51;;;3554:51;;3542:2;3527:18;1638:85:24;3408:203:51;4177:223:48;;;;;;:::i;:::-;;:::i;3929:107::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4013:16:48;3990:4;4013:16;;;:10;:16;;;;;;;;;3929:107;3636:287;;;;;;:::i;:::-;;:::i;5497:182::-;;;;;;:::i;:::-;;:::i;521:22::-;;;:::i;:::-;;;;;;;:::i;1558:194::-;;;;;;:::i;:::-;;:::i;1129:225::-;;;;;;:::i;:::-;;:::i;4526:147::-;;;;;;:::i;:::-;;:::i;5113:131::-;;;;;;:::i;:::-;;:::i;2543:215:24:-;;;;;;:::i;:::-;;:::i;404:19:48:-;;;;;-1:-1:-1;;;;;404:19:48;;;2055:567;1474:19:35;:17;:19::i;:::-;2258:34:48;;::::1;:93:::0;::::1;;;-1:-1:-1::0;2312:39:48;;::::1;2258:93;2237:162;;;::::0;-1:-1:-1;;;2237:162:48;;5919:2:51;2237:162:48::1;::::0;::::1;5901:21:51::0;5958:2;5938:18;;;5931:30;-1:-1:-1;;;5977:18:51;;;5970:52;6039:18;;2237:162:48::1;;;;;;;;;2426:9:::0;2410:13:::1;2453:110;2477:5;2473:1;:9;2453:110;;;2503:49;2510:9;;2520:1;2510:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2524:7;;2532:1;2524:10;;;;;;;:::i;:::-;;;;;;;2536:12;;2549:1;2536:15;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2503:6;:49::i;:::-;2484:3;;2453:110;;;-1:-1:-1::0;2578:37:48::1;::::0;160:25:51;;;2597:10:48::1;::::0;2578:37:::1;::::0;148:2:51;133:18;2578:37:48::1;;;;;;;2227:395;2055:567:::0;;;;;;:::o;4828:126::-;1531:13:24;:11;:13::i;:::-;4896:8:48::1;:6;:8::i;:::-;4919:28;4934:4;4940:6;;4919:28;;;;;;;;:::i;:::-;;;;;;;;4828:126:::0;;:::o;2293:101:24:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;5941:209:48:-;1531:13:24;:11;:13::i;:::-;6075:68:48::1;::::0;-1:-1:-1;;;6075:68:48;;6116:4:::1;6075:68;::::0;::::1;7610:51:51::0;-1:-1:-1;;;;;7697:32:51;;;7677:18;;;7670:60;7746:18;;;7739:34;;;6075:32:48;::::1;::::0;::::1;::::0;7583:18:51;;6075:68:48::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5941:209:::0;;;:::o;4177:223::-;1531:13:24;:11;:13::i;:::-;4264:5:48::1;::::0;:53:::1;::::0;-1:-1:-1;;;4264:53:48;;4283:10:::1;4264:53;::::0;::::1;7610:51:51::0;4303:4:48::1;7677:18:51::0;;;7670:60;7746:18;;;7739:34;;;-1:-1:-1;;;;;4264:5:48;;::::1;::::0;:18:::1;::::0;7583::51;;4264:53:48::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4243:114;;;::::0;-1:-1:-1;;;4243:114:48;;8268:2:51;4243:114:48::1;::::0;::::1;8250:21:51::0;8307:2;8287:18;;;8280:30;-1:-1:-1;;;8326:18:51;;;8319:44;8380:18;;4243:114:48::1;8066:338:51::0;4243:114:48::1;4372:21;::::0;160:25:51;;;4372:21:48::1;::::0;148:2:51;133:18;4372:21:48::1;;;;;;;4177:223:::0;:::o;3636:287::-;3815:34;;-1:-1:-1;;8586:2:51;8582:15;;;8578:53;3815:34:48;;;8566:66:51;8648:12;;;8641:28;;;3774:4:48;;;;8685:12:51;;3815:34:48;;;;;;;;;;;;3805:45;;;;;;3790:60;;3867:49;3886:11;;3867:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3899:10:48;;;-1:-1:-1;3911:4:48;;-1:-1:-1;3867:18:48;:49::i;:::-;3860:56;3636:287;-1:-1:-1;;;;;;3636:287:48:o;5497:182::-;1531:13:24;:11;:13::i;:::-;5629:43:48::1;::::0;-1:-1:-1;;;5629:43:48;;-1:-1:-1;;;;;8900:32:51;;;5629:43:48::1;::::0;::::1;8882:51:51::0;8949:18;;;8942:34;;;5629:23:48;::::1;::::0;::::1;::::0;8855:18:51;;5629:43:48::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5497:182:::0;;;:::o;521:22::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1558:194::-;1474:19:35;:17;:19::i;:::-;1708:37:48::1;1715:8;1725:6;1733:11;;1708:6;:37::i;1129:225::-:0;1531:13:24;:11;:13::i;:::-;1254:10:48::1;:24:::0;;;1288:8:::1;:20;1299:9:::0;;1288:8;:20:::1;:::i;:::-;-1:-1:-1::0;1323:24:48::1;::::0;1335:11;;1323:24:::1;::::0;;;::::1;1129:225:::0;;;:::o;4526:147::-;1531:13:24;:11;:13::i;:::-;4606:5:48::1;::::0;:34:::1;::::0;-1:-1:-1;;;4606:34:48;;4621:10:::1;4606:34;::::0;::::1;8882:51:51::0;8949:18;;;8942:34;;;-1:-1:-1;;;;;4606:5:48;;::::1;::::0;:14:::1;::::0;8855:18:51;;4606:34:48::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4598:68;;;::::0;-1:-1:-1;;;4598:68:48;;11737:2:51;4598:68:48::1;::::0;::::1;11719:21:51::0;11776:2;11756:18;;;11749:30;-1:-1:-1;;;11795:18:51;;;11788:51;11856:18;;4598:68:48::1;11535:345:51::0;4598:68:48::1;4526:147:::0;:::o;5113:131::-;1531:13:24;:11;:13::i;:::-;5183:10:48::1;:8;:10::i;:::-;5208:29;5223:5;5230:6;;5208:29;;;;;;;;:::i;2543:215:24:-:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:24;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:24;;2700:1:::1;2672:31;::::0;::::1;3554:51:51::0;3527:18;;2672:31:24::1;3408:203:51::0;2623:91:24::1;2723:28;2742:8;2723:18;:28::i;2002:128:35:-:0;1897:4;1920:7;-1:-1:-1;;;1920:7:35;;;;2063:61;;;2098:15;;-1:-1:-1;;;2098:15:35;;;;;;;;;;;2858:475:48;-1:-1:-1;;;;;2998:20:48;;;;;;:10;:20;;;;;;;;2997:21;2989:57;;;;-1:-1:-1;;;2989:57:48;;12087:2:51;2989:57:48;;;12069:21:51;12126:2;12106:18;;;12099:30;12165:25;12145:18;;;12138:53;12208:18;;2989:57:48;11885:347:51;2989:57:48;3077:42;3089:8;3099:6;3107:11;;3077;:42::i;:::-;3056:109;;;;-1:-1:-1;;;3056:109:48;;12439:2:51;3056:109:48;;;12421:21:51;12478:2;12458:18;;;12451:30;-1:-1:-1;;;12497:18:51;;;12490:50;12557:18;;3056:109:48;12237:344:51;3056:109:48;-1:-1:-1;;;;;3176:20:48;;;;;;;:10;:20;;;;;;;;;:27;;-1:-1:-1;;3176:27:48;3199:4;3176:27;;;;;;3221:5;:32;;-1:-1:-1;;;3221:32:48;;;;;8882:51:51;;;;8949:18;;;8942:34;;;3221:5:48;;;;:14;;8855:18:51;;3221:32:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3213:66;;;;-1:-1:-1;;;3213:66:48;;11737:2:51;3213:66:48;;;11719:21:51;11776:2;11756:18;;;11749:30;-1:-1:-1;;;11795:18:51;;;11788:51;11856:18;;3213:66:48;11535:345:51;3213:66:48;3309:8;-1:-1:-1;;;;;3295:31:48;;3319:6;3295:31;;;;160:25:51;;148:2;133:18;;14:177;3295:31:48;;;;;;;;2858:475;;;;:::o;1796:162:24:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:24;735:10:33;1855:23:24;1851:101;;1901:40;;-1:-1:-1;;;1901:40:24;;735:10:33;1901:40:24;;;3554:51:51;3527:18;;1901:40:24;3408:203:51;2463:115:35;1474:19;:17;:19::i;:::-;2522:7:::1;:14:::0;;-1:-1:-1;;;;2522:14:35::1;-1:-1:-1::0;;;2522:14:35::1;::::0;;2551:20:::1;2558:12;735:10:33::0;;656:96;2558:12:35::1;2551:20;::::0;-1:-1:-1;;;;;3572:32:51;;;3554:51;;3542:2;3527:18;2551:20:35::1;;;;;;;2463:115::o:0;2912:187:24:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:24;;;-1:-1:-1;;;;;;3020:17:24;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;1265:154:41:-;1356:4;1408;1379:25;1392:5;1399:4;1379:12;:25::i;:::-;:33;;1265:154;-1:-1:-1;;;;1265:154:41:o;2710:117:35:-;1721:16;:14;:16::i;:::-;2778:5:::1;2768:15:::0;;-1:-1:-1;;;;2768:15:35::1;::::0;;2798:22:::1;735:10:33::0;2807:12:35::1;656:96:33::0;1967:290:41;2050:7;2092:4;2050:7;2106:116;2130:5;:12;2126:1;:16;2106:116;;;2178:33;2188:12;2202:5;2208:1;2202:8;;;;;;;;:::i;:::-;;;;;;;2178:9;:33::i;:::-;2163:48;-1:-1:-1;2144:3:41;;2106:116;;;-1:-1:-1;2238:12:41;1967:290;-1:-1:-1;;;1967:290:41:o;2202:126:35:-;1897:4;1920:7;-1:-1:-1;;;1920:7:35;;;;2260:62;;2296:15;;-1:-1:-1;;;2296:15:35;;;;;;;;;;;9229:147:41;9292:7;9322:1;9318;:5;:51;;9564:13;9655:15;;;9690:4;9683:15;;;9736:4;9720:21;;9318:51;;;9564:13;9655:15;;;9690:4;9683:15;;;9736:4;9720:21;;9326:20;9311:58;9229:147;-1:-1:-1;;;9229:147:41:o;196:367:51:-;259:8;269:6;323:3;316:4;308:6;304:17;300:27;290:55;;341:1;338;331:12;290:55;-1:-1:-1;364:20:51;;407:18;396:30;;393:50;;;439:1;436;429:12;393:50;476:4;468:6;464:17;452:29;;536:3;529:4;519:6;516:1;512:14;504:6;500:27;496:38;493:47;490:67;;;553:1;550;543:12;490:67;196:367;;;;;:::o;568:1126::-;753:6;761;769;777;785;793;846:2;834:9;825:7;821:23;817:32;814:52;;;862:1;859;852:12;814:52;902:9;889:23;935:18;927:6;924:30;921:50;;;967:1;964;957:12;921:50;1006:70;1068:7;1059:6;1048:9;1044:22;1006:70;:::i;:::-;1095:8;;-1:-1:-1;980:96:51;-1:-1:-1;;1183:2:51;1168:18;;1155:32;1212:18;1199:32;;1196:52;;;1244:1;1241;1234:12;1196:52;1283:72;1347:7;1336:8;1325:9;1321:24;1283:72;:::i;:::-;1374:8;;-1:-1:-1;1257:98:51;-1:-1:-1;;1462:2:51;1447:18;;1434:32;1491:18;1478:32;;1475:52;;;1523:1;1520;1513:12;1475:52;1562:72;1626:7;1615:8;1604:9;1600:24;1562:72;:::i;:::-;568:1126;;;;-1:-1:-1;568:1126:51;;-1:-1:-1;568:1126:51;;1653:8;;568:1126;-1:-1:-1;;;568:1126:51:o;1891:348::-;1943:8;1953:6;2007:3;2000:4;1992:6;1988:17;1984:27;1974:55;;2025:1;2022;2015:12;1974:55;-1:-1:-1;2048:20:51;;2091:18;2080:30;;2077:50;;;2123:1;2120;2113:12;2077:50;2160:4;2152:6;2148:17;2136:29;;2212:3;2205:4;2196:6;2188;2184:19;2180:30;2177:39;2174:59;;;2229:1;2226;2219:12;2244:411;2315:6;2323;2376:2;2364:9;2355:7;2351:23;2347:32;2344:52;;;2392:1;2389;2382:12;2344:52;2432:9;2419:23;2465:18;2457:6;2454:30;2451:50;;;2497:1;2494;2487:12;2451:50;2536:59;2587:7;2578:6;2567:9;2563:22;2536:59;:::i;:::-;2614:8;;2510:85;;-1:-1:-1;2244:411:51;-1:-1:-1;;;;2244:411:51:o;2660:173::-;2728:20;;-1:-1:-1;;;;;2777:31:51;;2767:42;;2757:70;;2823:1;2820;2813:12;2757:70;2660:173;;;:::o;2838:186::-;2897:6;2950:2;2938:9;2929:7;2925:23;2921:32;2918:52;;;2966:1;2963;2956:12;2918:52;2989:29;3008:9;2989:29;:::i;3029:374::-;3106:6;3114;3122;3175:2;3163:9;3154:7;3150:23;3146:32;3143:52;;;3191:1;3188;3181:12;3143:52;3214:29;3233:9;3214:29;:::i;:::-;3204:39;;3262:38;3296:2;3285:9;3281:18;3262:38;:::i;:::-;3029:374;;3252:48;;-1:-1:-1;;;3369:2:51;3354:18;;;;3341:32;;3029:374::o;3616:226::-;3675:6;3728:2;3716:9;3707:7;3703:23;3699:32;3696:52;;;3744:1;3741;3734:12;3696:52;-1:-1:-1;3789:23:51;;3616:226;-1:-1:-1;3616:226:51:o;3847:625::-;3951:6;3959;3967;3975;4028:2;4016:9;4007:7;4003:23;3999:32;3996:52;;;4044:1;4041;4034:12;3996:52;4067:29;4086:9;4067:29;:::i;:::-;4057:39;-1:-1:-1;4165:2:51;4150:18;;4137:32;;-1:-1:-1;4244:2:51;4229:18;;4216:32;4271:18;4260:30;;4257:50;;;4303:1;4300;4293:12;4257:50;4342:70;4404:7;4395:6;4384:9;4380:22;4342:70;:::i;:::-;3847:625;;;;-1:-1:-1;4431:8:51;-1:-1:-1;;;;3847:625:51:o;4477:527::-;4626:2;4615:9;4608:21;4589:4;4658:6;4652:13;4701:6;4696:2;4685:9;4681:18;4674:34;4726:1;4736:140;4750:6;4747:1;4744:13;4736:140;;;4861:2;4845:14;;;4841:23;;4835:30;4830:2;4811:17;;;4807:26;4800:66;4765:10;4736:140;;;4740:3;4925:1;4920:2;4911:6;4900:9;4896:22;4892:31;4885:42;4995:2;4988;4984:7;4979:2;4971:6;4967:15;4963:29;4952:9;4948:45;4944:54;4936:62;;;4477:527;;;;:::o;5009:479::-;5089:6;5097;5105;5158:2;5146:9;5137:7;5133:23;5129:32;5126:52;;;5174:1;5171;5164:12;5126:52;5210:9;5197:23;5187:33;;5271:2;5260:9;5256:18;5243:32;5298:18;5290:6;5287:30;5284:50;;;5330:1;5327;5320:12;5284:50;5369:59;5420:7;5411:6;5400:9;5396:22;5369:59;:::i;:::-;5009:479;;5447:8;;-1:-1:-1;5343:85:51;;-1:-1:-1;;;;5009:479:51:o;6068:127::-;6129:10;6124:3;6120:20;6117:1;6110:31;6160:4;6157:1;6150:15;6184:4;6181:1;6174:15;6200:545;6293:4;6299:6;6359:11;6346:25;6453:2;6449:7;6438:8;6422:14;6418:29;6414:43;6394:18;6390:68;6380:96;;6472:1;6469;6462:12;6380:96;6499:33;;6551:20;;;-1:-1:-1;6594:18:51;6583:30;;6580:50;;;6626:1;6623;6616:12;6580:50;6659:4;6647:17;;-1:-1:-1;6710:1:51;6706:14;;;6690;6686:35;6676:46;;6673:66;;;6735:1;6732;6725:12;6932:471;7127:6;7120:14;7113:22;7102:9;7095:41;7172:2;7167;7156:9;7152:18;7145:30;7211:6;7206:2;7195:9;7191:18;7184:34;7268:6;7260;7255:2;7244:9;7240:18;7227:48;7324:1;7295:22;;;7319:2;7291:31;;;7284:42;;;;7387:2;7366:15;;;-1:-1:-1;;7362:29:51;7347:45;7343:54;;6932:471;-1:-1:-1;;6932:471:51:o;7784:277::-;7851:6;7904:2;7892:9;7883:7;7879:23;7875:32;7872:52;;;7920:1;7917;7910:12;7872:52;7952:9;7946:16;8005:5;7998:13;7991:21;7984:5;7981:32;7971:60;;8027:1;8024;8017:12;8987:380;9066:1;9062:12;;;;9109;;;9130:61;;9184:4;9176:6;9172:17;9162:27;;9130:61;9237:2;9229:6;9226:14;9206:18;9203:38;9200:161;;9283:10;9278:3;9274:20;9271:1;9264:31;9318:4;9315:1;9308:15;9346:4;9343:1;9336:15;9200:161;;8987:380;;;:::o;9372:127::-;9433:10;9428:3;9424:20;9421:1;9414:31;9464:4;9461:1;9454:15;9488:4;9485:1;9478:15;9630:518;9732:2;9727:3;9724:11;9721:421;;;9768:5;9765:1;9758:16;9812:4;9809:1;9799:18;9882:2;9870:10;9866:19;9863:1;9859:27;9853:4;9849:38;9918:4;9906:10;9903:20;9900:47;;;-1:-1:-1;9941:4:51;9900:47;9996:2;9991:3;9987:12;9984:1;9980:20;9974:4;9970:31;9960:41;;10051:81;10069:2;10062:5;10059:13;10051:81;;;10128:1;10114:16;;10095:1;10084:13;10051:81;;;10055:3;;9721:421;9630:518;;;:::o;10324:1206::-;10448:18;10443:3;10440:27;10437:53;;;10470:18;;:::i;:::-;10499:94;10589:3;10549:38;10581:4;10575:11;10549:38;:::i;:::-;10543:4;10499:94;:::i;:::-;10619:1;10644:2;10639:3;10636:11;10661:1;10656:616;;;;11316:1;11333:3;11330:93;;;-1:-1:-1;11389:19:51;;;11376:33;11330:93;-1:-1:-1;;10281:1:51;10277:11;;;10273:24;10269:29;10259:40;10305:1;10301:11;;;10256:57;11436:78;;10629:895;;10656:616;9577:1;9570:14;;;9614:4;9601:18;;-1:-1:-1;;10692:17:51;;;10793:9;10815:229;10829:7;10826:1;10823:14;10815:229;;;10918:19;;;10905:33;10890:49;;11025:4;11010:20;;;;10978:1;10966:14;;;;10845:12;10815:229;;;10819:3;11072;11063:7;11060:16;11057:159;;;11196:1;11192:6;11186:3;11180;11177:1;11173:11;11169:21;11165:34;11161:39;11148:9;11143:3;11139:19;11126:33;11122:79;11114:6;11107:95;11057:159;;;11259:1;11253:3;11250:1;11246:11;11242:19;11236:4;11229:33;10629:895;;10324:1206;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "batchClaimTokens(address[],uint256[],bytes32[][])": "3f5c7646",
    "claimTokens(address,uint256,bytes32[])": "cfb4a1fc",
    "fundAirdrop(uint256)": "8e2decd8",
    "hasClaimed(address)": "73b2e80e",
    "hasUserClaimed(address)": "a195b69c",
    "ipfsHash()": "c623674f",
    "merkleRoot()": "2eb4a7ab",
    "owner()": "8da5cb5b",
    "pause(string)": "6da66355",
    "paused()": "5c975abb",
    "renounceOwnership()": "715018a6",
    "rescueERC20(address,address,uint256)": "b2118a8d",
    "rescueERC721(address,address,uint256)": "7df325e1",
    "token()": "fc0c546a",
    "transferOwnership(address)": "f2fde38b",
    "unpause(string)": "e79faa58",
    "updateMerkleRoot(bytes32,string)": "e48034b5",
    "verifyClaim(address,uint256,bytes32[])": "aa2945db",
    "withdrawUnclaimed(uint256)": "e6634c67"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AirdropFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"name\":\"BatchTokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"ContractPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"rootUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"claimants\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[][]\",\"name\":\"merkleProofs\",\"type\":\"bytes32[][]\"}],\"name\":\"batchClaimTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"claimTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fundAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"hasUserClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipfsHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"rescueERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"}],\"name\":\"updateMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawUnclaimed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"batchClaimTokens(address[],uint256[],bytes32[][])\":{\"params\":{\"amounts\":\"The array of token amounts corresponding to each claimant\",\"claimants\":\"The array of addresses to claim for\",\"merkleProofs\":\"The array of merkle proofs corresponding to each claimant\"}},\"claimTokens(address,uint256,bytes32[])\":{\"params\":{\"amount\":\"The amount of tokens being claimed\",\"merkleProof\":\"The merkle proof to verify the claim\"}},\"fundAirdrop(uint256)\":{\"params\":{\"amount\":\"The amount of tokens to fund the contract with\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(string)\":{\"params\":{\"reason\":\"The reason for pausing the contract\"}},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"rescueERC20(address,address,uint256)\":{\"params\":{\"_recipient\":\"The recipient to send tokens to\",\"_token\":\"The address of the ERC20 token to rescue\",\"amount\":\"The amount of tokens to rescue\"}},\"rescueERC721(address,address,uint256)\":{\"params\":{\"_recipient\":\"The recipient to send tokens to\",\"_token\":\"The address of the ERC721 token to rescue\",\"tokenId\":\"The token ID of the ERC721 to rescue\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause(string)\":{\"params\":{\"reason\":\"The reason for resuming the contract\"}},\"updateMerkleRoot(bytes32,string)\":{\"params\":{\"_merkleRoot\":\"The new merkle root to be set\"}},\"verifyClaim(address,uint256,bytes32[])\":{\"params\":{\"amount\":\"The amount of tokens to be claimed\",\"claimant\":\"The address of the claimant\",\"merkleProof\":\"The merkle proof for verification\"},\"returns\":{\"_0\":\"True if the claim is valid, false otherwise\"}},\"withdrawUnclaimed(uint256)\":{\"params\":{\"amount\":\"The amount of tokens to withdraw\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchClaimTokens(address[],uint256[],bytes32[][])\":{\"notice\":\"Batch claim for multiple recipients by a single user\"},\"claimTokens(address,uint256,bytes32[])\":{\"notice\":\"Allows users to claim their tokens based on the merkle proof\"},\"fundAirdrop(uint256)\":{\"notice\":\"Fund the contract with the token to be airdropped\"},\"pause(string)\":{\"notice\":\"Pause the contract to stop all claims in case of a dispute or other issues\"},\"rescueERC20(address,address,uint256)\":{\"notice\":\"Rescue any ERC20 tokens mistakenly sent to this contract\"},\"rescueERC721(address,address,uint256)\":{\"notice\":\"Rescue any ERC721 tokens mistakenly sent to this contract\"},\"unpause(string)\":{\"notice\":\"Resume the contract to allow claims to continue after resolution of a dispute\"},\"updateMerkleRoot(bytes32,string)\":{\"notice\":\"Sets the merkle root for the airdrop\"},\"verifyClaim(address,uint256,bytes32[])\":{\"notice\":\"Verifies the claim using the provided merkle proof\"},\"withdrawUnclaimed(uint256)\":{\"notice\":\"Withdraw unclaimed tokens after the airdrop ends\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/TokenResurrection.sol\":\"TokenResurrection\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac\",\"dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/TokenResurrection.sol\":{\"keccak256\":\"0x93a25ef7367cd3410df0201dd856031c53959a1e45a162a522494e15c02542ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f80b785049897a2496e7c597c0a88457bff989616611b3eddabc44b7912e34ab\",\"dweb:/ipfs/QmRsXsLDKaECqT5gdCbZiWUJdukBaBzzLED845qiS4KQa1\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.26+commit.8a97fa7a" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "_token", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        { "inputs": [], "type": "error", "name": "EnforcedPause" },
        { "inputs": [], "type": "error", "name": "ExpectedPause" },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AirdropFunded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchTokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "paused",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractPaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimant",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "rootUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "claimants",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes32[][]",
              "name": "merkleProofs",
              "type": "bytes32[][]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchClaimTokens"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimant",
              "type": "address"
            },
            { "internalType": "uint256", "name": "amount", "type": "uint256" },
            {
              "internalType": "bytes32[]",
              "name": "merkleProof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimTokens"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "fundAirdrop"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasClaimed",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasUserClaimed",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ipfsHash",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "merkleRoot",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "string", "name": "reason", "type": "string" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_token", "type": "address" },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rescueERC20"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_token", "type": "address" },
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            },
            { "internalType": "uint256", "name": "tokenId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rescueERC721"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            { "internalType": "contract IERC20", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "newOwner", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            { "internalType": "string", "name": "reason", "type": "string" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_merkleRoot",
              "type": "bytes32"
            },
            { "internalType": "string", "name": "_ipfsHash", "type": "string" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateMerkleRoot"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimant",
              "type": "address"
            },
            { "internalType": "uint256", "name": "amount", "type": "uint256" },
            {
              "internalType": "bytes32[]",
              "name": "merkleProof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyClaim",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawUnclaimed"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "batchClaimTokens(address[],uint256[],bytes32[][])": {
            "params": {
              "amounts": "The array of token amounts corresponding to each claimant",
              "claimants": "The array of addresses to claim for",
              "merkleProofs": "The array of merkle proofs corresponding to each claimant"
            }
          },
          "claimTokens(address,uint256,bytes32[])": {
            "params": {
              "amount": "The amount of tokens being claimed",
              "merkleProof": "The merkle proof to verify the claim"
            }
          },
          "fundAirdrop(uint256)": {
            "params": {
              "amount": "The amount of tokens to fund the contract with"
            }
          },
          "owner()": { "details": "Returns the address of the current owner." },
          "pause(string)": {
            "params": { "reason": "The reason for pausing the contract" }
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "rescueERC20(address,address,uint256)": {
            "params": {
              "_recipient": "The recipient to send tokens to",
              "_token": "The address of the ERC20 token to rescue",
              "amount": "The amount of tokens to rescue"
            }
          },
          "rescueERC721(address,address,uint256)": {
            "params": {
              "_recipient": "The recipient to send tokens to",
              "_token": "The address of the ERC721 token to rescue",
              "tokenId": "The token ID of the ERC721 to rescue"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "unpause(string)": {
            "params": { "reason": "The reason for resuming the contract" }
          },
          "updateMerkleRoot(bytes32,string)": {
            "params": { "_merkleRoot": "The new merkle root to be set" }
          },
          "verifyClaim(address,uint256,bytes32[])": {
            "params": {
              "amount": "The amount of tokens to be claimed",
              "claimant": "The address of the claimant",
              "merkleProof": "The merkle proof for verification"
            },
            "returns": { "_0": "True if the claim is valid, false otherwise" }
          },
          "withdrawUnclaimed(uint256)": {
            "params": { "amount": "The amount of tokens to withdraw" }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "batchClaimTokens(address[],uint256[],bytes32[][])": {
            "notice": "Batch claim for multiple recipients by a single user"
          },
          "claimTokens(address,uint256,bytes32[])": {
            "notice": "Allows users to claim their tokens based on the merkle proof"
          },
          "fundAirdrop(uint256)": {
            "notice": "Fund the contract with the token to be airdropped"
          },
          "pause(string)": {
            "notice": "Pause the contract to stop all claims in case of a dispute or other issues"
          },
          "rescueERC20(address,address,uint256)": {
            "notice": "Rescue any ERC20 tokens mistakenly sent to this contract"
          },
          "rescueERC721(address,address,uint256)": {
            "notice": "Rescue any ERC721 tokens mistakenly sent to this contract"
          },
          "unpause(string)": {
            "notice": "Resume the contract to allow claims to continue after resolution of a dispute"
          },
          "updateMerkleRoot(bytes32,string)": {
            "notice": "Sets the merkle root for the airdrop"
          },
          "verifyClaim(address,uint256,bytes32[])": {
            "notice": "Verifies the claim using the provided merkle proof"
          },
          "withdrawUnclaimed(uint256)": {
            "notice": "Withdraw unclaimed tokens after the airdrop ends"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/TokenResurrection.sol": "TokenResurrection" },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4",
        "urls": [
          "bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7",
          "dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Pausable.sol": {
        "keccak256": "0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd",
        "urls": [
          "bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc",
          "dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0x6400c4bee15052e043e5d10315135972529bd1c8012f43da494dc6b4f4661058",
        "urls": [
          "bzz-raw://da5d3d47d35af4373743a559ea4b9b7ecfe4bab6f0703f410c1e59959b7966ac",
          "dweb:/ipfs/QmTHdoghh4WLu4yURjGEgRk162pcwwdsG52MPGa12GqnGR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "src/TokenResurrection.sol": {
        "keccak256": "0x93a25ef7367cd3410df0201dd856031c53959a1e45a162a522494e15c02542ae",
        "urls": [
          "bzz-raw://f80b785049897a2496e7c597c0a88457bff989616611b3eddabc44b7912e34ab",
          "dweb:/ipfs/QmRsXsLDKaECqT5gdCbZiWUJdukBaBzzLED845qiS4KQa1"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 48
}
